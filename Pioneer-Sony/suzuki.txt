#include <SPI.h>
// библиотека SPI должна быть в стандартном софте, ну или её можно скачать.

// Коды имеющихся на руле кнопок
const int VOL_UP=1;
const int VOL_DN=2;
const int PREV_TR=3;
const int NEXT_TR=4;
const int MODE=5;
const int MUTE=6;


int csPin=4; // CS на цифровом потенциометре

int wheelPin=A5; // аналоговый пин, на котором мы считываем сопротивление нажатой на руле кнопки

int i=0;
int prevButton=0;

void setup() {               
  pinMode(csPin, OUTPUT);   
  delay(50);

  SPI.begin();
  delay(50);
  SPI.transfer(0); // команда
  SPI.transfer(0); // значение
 
  pinMode(wheelPin, INPUT);

  delay(100);
  //Serial.begin(9600);
}


int getR() { // Эта функция читает сопротивление с кнопок на руле и возвращает код нажатой кнопки, либо 0

  // читаем сопротивление (на самом деле напряжение, конечно) на аналоговом пине
  int r=analogRead(wheelPin);

  //Serial.println(r);
 
  // Ищем, какая кнопка соответствует этому сопротивлению. 
  // Данные значения сопротивлений подходят для Suzuki Swift, для других автомобилей числа будут другие.
  if (r>=9 && r<=15) return(VOL_UP);
  if (r>=18 && r<=26) return(VOL_DN);
  if (r>=120 && r<=156) return(PREV_TR);
  if (r>=60 && r<=80) return(NEXT_TR);
  if (r>=33 && r<=47) return(MODE);
  if (r>=2 && r<=6) return(MUTE);

  // если ни одна из кнопок не нажата, возвращаем 0
  return (0);
}

// ОСНОВНОЙ ЦИКЛ
void loop() {
  int currButton=getR(); // заносим в переменную currButton код нажатой кнопки
  if (currButton!=prevButton) { // если значение поменялось с прошлого раза

    delay(10);
    currButton=getR(); // ждем 10ms и читаем еще раз, чтобы исключить "дребезг" кнопки

    if (currButton!=prevButton) { // если код кнопки точно поменялся с прошлого раза
      //Serial.println(currButton);
      prevButton=currButton;     // сохраняем новое значение в переменную prevButton

      // Выставляем сопротивление на потенциометре, тем самым посылаем команду на магнитолу.
      // Значения сопротивлений даны для Pioneer, для магнитол других марок числа будут другие.
      SPI.transfer(0); 
      switch(currButton) {
       case VOL_UP: SPI.transfer(21); break;  // 16k
       case VOL_DN: SPI.transfer(31); break;  // 24k   
       case PREV_TR: SPI.transfer(14); break;  // 11k
       case NEXT_TR: SPI.transfer(10); break;  // 8k
       case MODE: SPI.transfer(2); break;  // 1.6k
       case MUTE: SPI.transfer(4); break;  // 3k
       default: SPI.transfer(0); break; // 0k
     }
   }
  }
  delay(5);
}